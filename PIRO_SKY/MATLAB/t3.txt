type t3


load R
full (R)
B = blksky (R) ;

s1 = svd (full (B)) ;
s2 = svd (full (R)) ;

[s1 s2 s1-s2]

err = norm (s1-s2)



t3

ans =

    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.5774   -0.5774         0         0         0
         0         0         0   -1.6330   -0.2041         0    0.6124         0
         0         0         0         0   -1.6202         0   -0.6944         0
         0         0         0         0         0   -1.4142    0.7071         0
         0         0         0         0         0         0    1.6257    0.6151
         0         0         0         0         0         0         0   -1.2734

sky_set_common:
safemin  2.22507e-308
eps      1.11022e-16
esfmn2   -484
safemin2 2.00208e-146
safemx2  4.9948e+145
i = 0 encol[i]=2 bw = 1
i = 1 encol[i]=2 bw = 1
i = 2 encol[i]=4 bw = 1
i= 3 trow[i]=2 bw = 1
i = 3 encol[i]=6 bw = 1
i= 4 trow[i]=2 bw = 1
i = 4 encol[i]=6 bw = 1
i= 5 trow[i]=4 bw = 1
i = 5 encol[i]=6 bw = 1
i= 6 trow[i]=3 bw = 1
i = 6 encol[i]=7 bw = 1
i= 7 trow[i]=6 bw = 1
i = 7 encol[i]=7 bw = 1
clen 1 
i=0 csize=1 
csize 1
clen 2 
i=1 csize=3 
csize 3
clen 3 
i=2 csize=6 
csize 6
clen 2 
i=3 csize=8 
csize 8
clen 3 
i=4 csize=11 
csize 11
clen 3 
i=5 csize=14 
csize 14
clen 4 
i=6 csize=18 
csize 18
clen 3 
i=7 csize=21 
csize 21
Allocating 21 bytes


------------------------------------------- find_sgood:
Allocating sgood
trow ********
 0  0  0  2  2  4  3  6  8 
encol ********
 2  2  4  6  6  6  7  7 
next ********
 1  2  3  4  5  6  7  -1 
prev ********
 -1  0  1  2  3  4  5  6 
cp ********
 0  2  5  7  10  13  17  20  20 
list ********
 2  4  6 
size = 21 
nlist = 3 

------------------------------- skyline svd:
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.5774   -0.5774         0         0         0
         0         0         0   -1.6330   -0.2041         0    0.6124         0
         0         0         0         0   -1.6202         0   -0.6944         0
         0         0         0         0         0   -1.4142    0.7071         0
         0         0         0         0         0         0    1.6257    0.6151
         0         0         0         0         0         0         0   -1.2734

maxerr 0  sgood[0] 2.42798 relerr 0



Finding a new block 
anchor column=6, its trow=3
nlist = 3 
list ********
 2  4  6 
trow ********
 0  0  0  2  2  4  3  6  8 
encol ********
 2  2  4  6  6  6  7  7 
erow = 4
srow = 5
ecol = 6
maxecol = 6
tk = 6
e = 4
Block size is fixed 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.5774 -1.6330
Column 4 -0.5774 -0.2041 -1.6202
Column 5 0.0000 -1.4142
Column 6 0.6124 -0.6944 0.7071 1.6257
Column 7 0.6151 -1.2734
nlist2 = 1 
list2 ********
 6 
nlist = 2 
list ********
 2  4 
Before corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.5774 -1.6330
Column 4 -0.5774 -0.2041 -1.6202
Column 5 0.0000 -1.4142
Column 6 0.6124 -0.6944 0.7071 1.6257
Column 7 0.6151 -1.2734
current corner 6
toprow of  corner 3
swap rows 3-6 in columns 6-5 
Setting right the trow array
k= 6 trow[k]=4 bw = 1
Did trow, now apply givens to col
Did apply givens to col
After corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.5774 -1.6330
Column 4 -0.5774 -0.2041 -1.6202
Column 5 0.6124 -0.6944 0.7071
Column 6 0.0000 -1.4142 0.0000
Column 7 0.6151 -1.2734
head = 0, tail=7
next ********
 1  2  3  4  5  6  7  -1 
prev ********
 -1  0  1  2  3  4  5  6 
cp ********
 0  2  5  7  10  13  17  20  20 
tindex 
0 1 2 3 4 5 6 7 Reassigning encol values 
kk= 3 encol[kk]=5 bw = 1
Removing fill using row rotations 
ws is 1.62569
stuck? da 0.707107 db 1.62569 d 0 c 0 s 0
gc da=0.7071, db=1.6257,  c=0.3989, s=0.9170 d=1.7728
did:   da 0.707107 db 1.62569 d 1.77281 c 0.398862 s 0.917011
here 33
Apply rowrow r-5-6 c-5-6
rot no 0
Update the stack
yet more
yet more 2
Before the chase 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.5774 -1.6330
Column 4 -0.5774 -0.2041 -1.6202
Column 5 0.6124 -0.6944 1.7728
Column 6 0.0000 -0.5641 1.2968
Column 7 0.6151 -1.2734
rrot_count = 1
rot_count = 0
r1 ********
 6 
c1 ********

In diag block
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 6 
row = 6
rindex = 0
lcol = 7
lcol1 = 6
Apply rowrot r-5-6 c-7-7
rot no 0
Creating fill 
cpk-(lcol-row) = 19
cpk=20 lcol=7 row=6
row-1= 5 encol[row-1]=7 bw = 1
lcol= 7 trow[lcol]=5 bw = 1
7 is not a corner
nextsrow = -1
nexterow = 6
nextecol = -1
Completed the chase
top3=0
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.5774   -0.5774         0         0         0
         0         0         0   -1.6330   -0.2041    0.6124         0         0
         0         0         0         0   -1.6202   -0.6944         0         0
         0         0         0         0         0    1.7728   -0.5641    0.5641
         0         0         0         0         0         0    1.2968    0.2453
         0         0         0         0         0         0         0   -1.2734

maxerr 6.66134e-16  sgood[0] 2.42798 relerr 2.74357e-16

------------------------------- skyline svd:
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.5774   -0.5774         0         0         0
         0         0         0   -1.6330   -0.2041    0.6124         0         0
         0         0         0         0   -1.6202   -0.6944         0         0
         0         0         0         0         0    1.7728   -0.5641    0.5641
         0         0         0         0         0         0    1.2968    0.2453
         0         0         0         0         0         0         0   -1.2734

maxerr 6.66134e-16  sgood[0] 2.42798 relerr 2.74357e-16



Finding a new block 
anchor column=4, its trow=2
nlist = 2 
list ********
 2  4 
trow ********
 0  0  0  2  2  3  4  5  8 
encol ********
 2  2  4  5  6  7  7  7 
erow = 2
srow = 3
ecol = 4
maxecol = 5
tk = 4
e = 2
Block size is fixed 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.5774 -1.6330
Column 4 -0.5774 -0.2041 -1.6202
Column 5 0.6124 -0.6944 1.7728
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
nlist2 = 1 
list2 ********
 4 
nlist = 1 
list ********
 2 
Before corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.5774 -1.6330
Column 4 -0.5774 -0.2041 -1.6202
Column 5 0.6124 -0.6944 1.7728
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
current corner 4
toprow of  corner 2
Find & apply Givens r-2-4 c-3-4gc da=0.5774, db=-0.5774,  c=0.7071, s=-0.7071 d=0.8165
k= 4 trow[k]=3 bw = 1
After corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 -1.0104
Column 4 -1.2990 -1.1456
Column 5 0.6124 -0.6944 1.7728
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
head = 0, tail=7
next ********
 1  2  3  4  5  6  7  -1 
prev ********
 -1  0  1  2  3  4  5  6 
cp ********
 0  2  5  7  10  13  17  20  20 
tindex 
0 1 2 3 4 5 6 7 Reassigning encol values 
kk= 2 encol[kk]=3 bw = 1
Removing fill using row rotations 
ws is 1.14564
stuck? da -1.01036 db 1.14564 d 0 c 0 s 0
gc da=-1.0104, db=1.1456,  c=-0.6614, s=0.7500 d=1.5275
did:   da -1.01036 db 1.14564 d 1.52753 c -0.661438 s 0.75
here 33
Apply rowrow r-3-4 c-3-4
rot no 0
Update the stack
yet more
yet more 2
Before the chase 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.0000 1.7321
Column 5 0.6124 -0.6944 1.7728
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
rrot_count = 1
rot_count = 0
r1 ********
 4 
c1 ********

In diag block
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 4 
row = 4
rindex = 0
lcol = 6
lcol1 = 5
Apply rowrot r-3-4 c-5-6
rot no 0
Creating fill 
cpk-(lcol-row) = 15
cpk=17 lcol=6 row=4
chase corner 6 
lcol= 6 trow[lcol]=4 bw = 1
nextsrow = 5
nexterow = 4
nextecol = 6
rrot_count = 0
rot_count = 1
r1 ********

c1 ********
 6 
In diag block
Apply colrot r-5-6 c-5-6
rot no 0
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 6 
row = 6
rindex = 0
lcol = 7
lcol1 = 7
Apply rowrot r-5-6 c-7-7
rot no 0
7 has no fill
nextsrow = -1
nexterow = 6
nextecol = -1
Completed the chase
top3=0
Adding 5 to right stack
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.0000   -0.9258         0         0
         0         0         0         0    1.7321    0.0000         0         0
         0         0         0         0         0    1.7728   -0.5641    0.5641
         0         0         0         0         0         0    1.2968    0.2453
         0         0         0         0         0         0         0   -1.2734

maxerr 4.44089e-16  sgood[0] 2.42798 relerr 1.82905e-16

------------------------------- skyline svd:
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.0000   -0.9258         0         0
         0         0         0         0    1.7321    0.0000         0         0
         0         0         0         0         0    1.7728   -0.5641    0.5641
         0         0         0         0         0         0    1.2968    0.2453
         0         0         0         0         0         0         0   -1.2734

maxerr 4.44089e-16  sgood[0] 2.42798 relerr 1.82905e-16



Finding a new block 
anchor column=5, its trow=3
nlist = 2 
list ********
 2  5 
trow ********
 0  0  0  2  3  3  4  5  8 
encol ********
 2  2  3  5  6  7  7  7 
erow = 3
srow = 4
ecol = 5
maxecol = 6
tk = 5
e = 3
Block size is fixed 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.0000 1.7321
Column 5 -0.9258 0.0000 1.7728
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
nlist2 = 1 
list2 ********
 5 
nlist = 1 
list ********
 2 
Before corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.0000 1.7321
Column 5 -0.9258 0.0000 1.7728
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
current corner 5
toprow of  corner 3
Find & apply Givens r-3-5 c-4-5gc da=0.0000, db=-0.9258,  c=0.0000, s=-1.0000 d=0.9258
k= 5 trow[k]=4 bw = 1
After corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 0.0000
Column 5 1.7321 0.0000
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
head = 0, tail=7
next ********
 1  2  3  4  5  6  7  -1 
prev ********
 -1  0  1  2  3  4  5  6 
cp ********
 0  2  5  7  10  13  17  20  20 
tindex 
0 1 2 3 4 5 6 7 Reassigning encol values 
kk= 3 encol[kk]=4 bw = 1
Removing fill using row rotations 
ws is -1.77281
stuck? da 5.53259e-16 db -1.77281 d 0 c 0 s 0
gc da=0.0000, db=-1.7728,  c=0.0000, s=-1.0000 d=1.7728
did:   da 5.53259e-16 db -1.77281 d 1.77281 c 3.1208e-16 s -1
here 33
Apply rowrow r-4-5 c-4-5
rot no 0
Update the stack
yet more
yet more 2
Before the chase 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 -0.0000 1.7321
Column 6 0.0000 -0.5641 1.2968
Column 7 0.5641 0.2453 -1.2734
rrot_count = 1
rot_count = 0
r1 ********
 5 
c1 ********

In diag block
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 5 
row = 5
rindex = 0
lcol = 7
lcol1 = 6
Apply rowrot r-4-5 c-6-7
rot no 0
Creating fill 
cpk-(lcol-row) = 18
cpk=20 lcol=7 row=5
chase corner 7 
gc da=0.5641, db=-0.5641,  c=0.7071, s=-0.7071 d=0.7977
F&A Givens r-4-5 c-6-7
lcol= 7 trow[lcol]=5 bw = 1
nextsrow = 6
nexterow = 5
nextecol = 7
rrot_count = 0
rot_count = 1
r1 ********

c1 ********
 7 
In diag block
Apply colrot r-6-7 c-6-7
rot no 0
gc da=0.7435, db=0.9005,  c=0.6367, s=0.7711 d=1.1677
Apply rowrot r-6-7 c-6-7
rot no 0
In Par row rot block
In L block.
Stopping as row rots need not complete
Completed the chase
top3=0
Adding 6 to right stack
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.9258         0         0         0
         0         0         0         0    1.7728   -0.0000    0.7977         0
         0         0         0         0         0    1.7321   -0.0000   -0.0000
         0         0         0         0         0         0    1.1677    0.0000
         0         0         0         0         0         0         0   -1.4142

maxerr 2.22045e-16  sgood[0] 2.42798 relerr 9.14523e-17

------------------------------- skyline svd:
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.9258         0         0         0
         0         0         0         0    1.7728   -0.0000    0.7977         0
         0         0         0         0         0    1.7321   -0.0000   -0.0000
         0         0         0         0         0         0    1.1677    0.0000
         0         0         0         0         0         0         0   -1.4142

maxerr 2.22045e-16  sgood[0] 2.42798 relerr 9.14523e-17



Finding a new block 
anchor column=6, its trow=4
nlist = 2 
list ********
 2  6 
trow ********
 0  0  0  2  3  4  4  5  8 
encol ********
 2  2  3  4  6  7  7  7 
erow = 4
srow = 5
ecol = 6
maxecol = 7
tk = 6
e = 4
Block size is fixed 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 -0.0000 1.7321
Column 6 0.7977 -0.0000 1.1677
Column 7 -0.0000 0.0000 -1.4142
nlist2 = 1 
list2 ********
 6 
nlist = 1 
list ********
 2 
Before corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 -0.0000 1.7321
Column 6 0.7977 -0.0000 1.1677
Column 7 -0.0000 0.0000 -1.4142
current corner 6
toprow of  corner 4
Find & apply Givens r-4-6 c-5-6gc da=-0.0000, db=0.7977,  c=-0.0000, s=1.0000 d=0.7977
k= 6 trow[k]=5 bw = 1
After corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 -0.0000
Column 6 -1.7321 -0.0000
Column 7 -0.0000 0.0000 -1.4142
head = 0, tail=7
next ********
 1  2  3  4  5  6  7  -1 
prev ********
 -1  0  1  2  3  4  5  6 
cp ********
 0  2  5  7  10  13  17  20  20 
tindex 
0 1 2 3 4 5 6 7 Reassigning encol values 
kk= 4 encol[kk]=5 bw = 1
Removing fill using row rotations 
ws is 1.16775
stuck? da -9.21664e-16 db 1.16775 d 0 c 0 s 0
gc da=-0.0000, db=1.1677,  c=-0.0000, s=1.0000 d=1.1677
did:   da -9.21664e-16 db 1.16775 d 1.16775 c -7.89265e-16 s 1
here 33
Apply rowrow r-5-6 c-5-6
rot no 0
Update the stack
yet more
yet more 2
Before the chase 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.7321
Column 7 -0.0000 0.0000 -1.4142
rrot_count = 1
rot_count = 0
r1 ********
 6 
c1 ********

In diag block
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 6 
row = 6
rindex = 0
lcol = 7
lcol1 = 7
Apply rowrot r-5-6 c-7-7
rot no 0
7 has no fill
nextsrow = -1
nexterow = 6
nextecol = -1
Completed the chase
top3=0
Adding 7 to right stack
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.9258         0         0         0
         0         0         0         0    1.7728    0.7977         0         0
         0         0         0         0         0    1.1677    0.0000    0.0000
         0         0         0         0         0         0    1.7321   -0.0000
         0         0         0         0         0         0         0   -1.4142

maxerr 2.22045e-16  sgood[0] 2.42798 relerr 9.14523e-17

------------------------------- skyline svd:
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.9258         0         0         0
         0         0         0         0    1.7728    0.7977         0         0
         0         0         0         0         0    1.1677    0.0000    0.0000
         0         0         0         0         0         0    1.7321   -0.0000
         0         0         0         0         0         0         0   -1.4142

maxerr 2.22045e-16  sgood[0] 2.42798 relerr 9.14523e-17



Finding a new block 
anchor column=7, its trow=5
nlist = 2 
list ********
 2  7 
trow ********
 0  0  0  2  3  4  5  5  8 
encol ********
 2  2  3  4  5  7  7  7 
erow = 5
srow = 6
ecol = 7
maxecol = 7
tk = 7
e = 5
Block size is fixed 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.7321
Column 7 0.0000 -0.0000 -1.4142
nlist2 = 1 
list2 ********
 7 
nlist = 1 
list ********
 2 
Before corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.7321
Column 7 0.0000 -0.0000 -1.4142
current corner 7
toprow of  corner 5
Find & apply Givens r-5-7 c-6-7gc da=0.0000, db=0.0000,  c=0.9395, s=0.3425 d=0.0000
k= 7 trow[k]=6 bw = 1
After corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.6273
Column 7 -0.5933 -1.3287
head = 0, tail=7
next ********
 1  2  3  4  5  6  7  -1 
prev ********
 -1  0  1  2  3  4  5  6 
cp ********
 0  2  5  7  10  13  17  20  20 
tindex 
0 1 2 3 4 5 6 7 Reassigning encol values 
kk= 5 encol[kk]=6 bw = 1
Removing fill using row rotations 
ws is -0.484431
stuck? da 1.62726 db -0.484431 d 0 c 0 s 0
gc da=1.6273, db=-0.4844,  c=0.9584, s=-0.2853 d=1.6978
did:   da 1.62726 db -0.484431 d 1.69784 c 0.958432 s -0.285322
here 33
Apply rowrow r-6-7 c-6-7
rot no 0
Update the stack
yet more
yet more 2
Before the chase 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.6978
Column 7 -0.1895 -1.4427
rrot_count = 1
rot_count = 0
r1 ********
 7 
c1 ********

In diag block
In Par row rot block
In L block.
Stopping as row rots need not complete
Completed the chase
top3=0
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.9258         0         0         0
         0         0         0         0    1.7728    0.7977         0         0
         0         0         0         0         0    1.1677    0.0000         0
         0         0         0         0         0         0    1.6978   -0.1895
         0         0         0         0         0         0         0   -1.4427

maxerr 6.66134e-16  sgood[0] 2.42798 relerr 2.74357e-16

------------------------------- skyline svd:
    1.4142         0   -0.7071         0         0         0         0         0
         0   -1.4142   -0.7071         0         0         0         0         0
         0         0   -1.7321    0.8165         0         0         0         0
         0         0         0    1.5275    0.9258         0         0         0
         0         0         0         0    1.7728    0.7977         0         0
         0         0         0         0         0    1.1677    0.0000         0
         0         0         0         0         0         0    1.6978   -0.1895
         0         0         0         0         0         0         0   -1.4427

maxerr 6.66134e-16  sgood[0] 2.42798 relerr 2.74357e-16



Finding a new block 
anchor column=2, its trow=0
nlist = 1 
list ********
 2 
trow ********
 0  0  0  2  3  4  5  6  8 
encol ********
 2  2  3  4  5  6  7  7 
erow = 0
srow = 1
ecol = 2
maxecol = 2
tk = 2
e = 0
Block size is fixed 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.6978
Column 7 -0.1895 -1.4427
nlist2 = 1 
list2 ********
 2 
nlist = 0 
list ********

Before corner 
Skyline Matrix
Column 0 1.4142
Column 1 0.0000 -1.4142
Column 2 -0.7071 -0.7071 -1.7321
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.6978
Column 7 -0.1895 -1.4427
current corner 2
toprow of  corner 0
Find & apply Givens r-0-2 c-1-2gc da=0.0000, db=-0.7071,  c=0.0000, s=1.0000 d=-0.7071
k= 2 trow[k]=1 bw = 1
After corner 
Skyline Matrix
Column 0 1.4142
Column 1 -0.7071 -0.7071
Column 2 -1.4142 0.0000
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.6978
Column 7 -0.1895 -1.4427
head = 0, tail=7
next ********
 1  2  3  4  5  6  7  -1 
prev ********
 -1  0  1  2  3  4  5  6 
cp ********
 0  2  5  7  10  13  17  20  20 
tindex 
0 1 2 3 4 5 6 7 Reassigning encol values 
kk= 0 encol[kk]=1 bw = 1
Removing fill using row rotations 
ws is -1.73205
stuck? da -0.707107 db -1.73205 d 0 c 0 s 0
gc da=-0.7071, db=-1.7321,  c=-0.3780, s=-0.9258 d=1.8708
did:   da -0.707107 db -1.73205 d 1.87083 c -0.377964 s -0.92582
here 33
Apply rowrow r-1-2 c-1-2
rot no 0
Update the stack
yet more
yet more 2
Before the chase 
Skyline Matrix
Column 0 1.4142
Column 1 -0.7071 1.8708
Column 2 0.5345 -1.3093
Column 3 0.8165 1.5275
Column 4 0.9258 1.7728
Column 5 0.7977 1.1677
Column 6 0.0000 1.6978
Column 7 -0.1895 -1.4427
rrot_count = 1
rot_count = 0
r1 ********
 2 
c1 ********

In diag block
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 2 
row = 2
rindex = 0
lcol = 3
lcol1 = 2
Apply rowrot r-1-2 c-3-3
rot no 0
Creating fill 
cpk-(lcol-row) = 6
cpk=7 lcol=3 row=2
chase corner 3 
gc da=0.5345, db=-0.7559,  c=0.5774, s=-0.8165 d=0.9258
F&A Givens r-1-2 c-2-3
lcol= 3 trow[lcol]=2 bw = 1
nextsrow = 2
nexterow = 2
nextecol = 3
rrot_count = 0
rot_count = 1
r1 ********

c1 ********
 3 
In diag block
Apply colrot r-2-3 c-2-3
rot no 0
gc da=0.7274, db=-1.2472,  c=0.5038, s=-0.8638 d=1.4438
Apply rowrot r-2-3 c-2-3
rot no 0
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 3 
row = 3
rindex = 0
lcol = 4
lcol1 = 3
Apply rowrot r-2-3 c-4-4
rot no 0
Creating fill 
cpk-(lcol-row) = 9
cpk=10 lcol=4 row=3
chase corner 4 
gc da=-1.3319, db=-0.7997,  c=0.8573, s=0.5148 d=-1.5536
F&A Givens r-2-3 c-3-4
lcol= 4 trow[lcol]=3 bw = 1
nextsrow = 3
nexterow = 3
nextecol = 4
rrot_count = 0
rot_count = 1
r1 ********

c1 ********
 4 
In diag block
Apply colrot r-3-4 c-3-4
rot no 0
gc da=0.1611, db=0.9126,  c=0.1739, s=0.9848 d=0.9267
Apply rowrot r-3-4 c-3-4
rot no 0
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 4 
row = 4
rindex = 0
lcol = 5
lcol1 = 4
Apply rowrot r-3-4 c-5-5
rot no 0
Creating fill 
cpk-(lcol-row) = 12
cpk=13 lcol=5 row=4
chase corner 5 
gc da=1.6166, db=0.7856,  c=0.8994, s=0.4371 d=1.7974
F&A Givens r-3-4 c-4-5
lcol= 5 trow[lcol]=4 bw = 1
nextsrow = 4
nexterow = 4
nextecol = 5
rrot_count = 0
rot_count = 1
r1 ********

c1 ********
 5 
In diag block
Apply colrot r-4-5 c-4-5
rot no 0
gc da=-0.1475, db=0.5104,  c=-0.2776, s=0.9607 d=0.5313
Apply rowrot r-4-5 c-4-5
rot no 0
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 5 
row = 5
rindex = 0
lcol = 6
lcol1 = 5
Apply rowrot r-4-5 c-6-6
rot no 0
Creating fill 
cpk-(lcol-row) = 16
cpk=17 lcol=6 row=5
chase corner 6 
gc da=0.8947, db=0.0000,  c=1.0000, s=0.0000 d=0.8947
F&A Givens r-4-5 c-5-6
lcol= 6 trow[lcol]=5 bw = 1
nextsrow = 5
nexterow = 5
nextecol = 6
rrot_count = 0
rot_count = 1
r1 ********

c1 ********
 6 
In diag block
Apply colrot r-5-6 c-5-6
rot no 0
gc da=-0.6874, db=0.0000,  c=1.0000, s=-0.0000 d=-0.6874
Apply rowrot r-5-6 c-5-6
rot no 0
In Par row rot block
In L block.
rrot_count = 1
r1 ********
 6 
row = 6
rindex = 0
lcol = 7
lcol1 = 6
Apply rowrot r-5-6 c-7-7
rot no 0
Creating fill 
cpk-(lcol-row) = 19
cpk=20 lcol=7 row=6
chase corner 7 
gc da=-0.0000, db=0.0000,  c=0.9886, s=-0.1504 d=-0.0000
F&A Givens r-5-6 c-6-7
lcol= 7 trow[lcol]=6 bw = 1
nextsrow = 6
nexterow = 6
nextecol = 7
rrot_count = 0
rot_count = 1
r1 ********

c1 ********
 7 
In diag block
Apply colrot r-6-7 c-6-7
rot no 0
gc da=1.6774, db=0.2170,  c=0.9917, s=0.1283 d=1.6914
Apply rowrot r-6-7 c-6-7
rot no 0
In Par row rot block
In L block.
Stopping as row rots need not complete
Completed the chase
top3=0
    1.4142   -0.7071         0         0         0         0         0         0
         0    1.8708    0.9258         0         0         0         0         0
         0         0    1.4438   -1.5536         0         0         0         0
         0         0         0    0.9267    1.7974         0         0         0
         0         0         0         0    0.5313    0.8947         0         0
         0         0         0         0         0   -0.6874   -0.0000         0
         0         0         0         0         0         0    1.6914    0.1383
         0         0         0         0         0         0         0   -1.4561

maxerr 0.743179  sgood[0] 2.42798 relerr 0.306089
    1.4142   -0.7071         0         0         0         0         0         0
         0    1.8708    0.9258         0         0         0         0         0
         0         0    1.4438   -1.5536         0         0         0         0
         0         0         0    0.9267    1.7974         0         0         0
         0         0         0         0    0.5313    0.8947         0         0
         0         0         0         0         0   -0.6874   -0.0000         0
         0         0         0         0         0         0    1.6914    0.1383
         0         0         0         0         0         0         0   -1.4561

maxerr 0.743179  sgood[0] 2.42798 relerr 0.306089
Leaving sky_reduce 

ans =

    2.5468    2.4280    0.1189
    2.1810    2.1753    0.0057
    1.7142    1.7321   -0.0178
    1.7117    1.5483    0.1634
    1.4388    1.4142    0.0246
    1.2783    1.4142   -0.1359
    1.0837    1.1260   -0.0424
    0.0980    0.8412   -0.7432


err =

    0.7838

diary off
